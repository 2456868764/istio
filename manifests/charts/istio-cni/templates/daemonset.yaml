# This manifest installs the Istio install-cni container, as well
# as the Istio CNI plugin and config on
# each master and worker node in a Kubernetes cluster.
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: istio-cni-node
  namespace: {{ .Release.Namespace }}
  labels:
    k8s-app: istio-cni-node
    release: {{ .Release.Name }}
    istio.io/rev: {{ .Values.revision | default "default" }}
    install.operator.istio.io/owning-resource: {{ .Values.ownerName | default "unknown" }}
    operator.istio.io/component: "Cni"
spec:
  selector:
    matchLabels:
      k8s-app: istio-cni-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: istio-cni-node
        sidecar.istio.io/inject: "false"
      annotations:
        sidecar.istio.io/inject: "false"
        # Add Prometheus Scrape annotations
        prometheus.io/scrape: 'true'
        prometheus.io/port: "15014"
        prometheus.io/path: '/metrics'
        # Custom annotations
        {{- if .Values.cni.podAnnotations }}
{{ toYaml .Values.cni.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        # Make sure istio-cni-node gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      priorityClassName: system-node-critical
      serviceAccountName: istio-cni
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 5
      initContainers:
        - name: cni-init
{{- if contains "/" .Values.cni.image }}
          image: "{{ .Values.cni.image }}"
{{- else }}
          image: "{{ .Values.cni.hub | default .Values.global.hub }}/{{ .Values.cni.image | default "install-cni" }}:{{ .Values.cni.tag | default .Values.global.tag }}"
{{- end }}
{{- if or .Values.cni.pullPolicy .Values.global.imagePullPolicy }}
          imagePullPolicy: {{ .Values.cni.pullPolicy | default .Values.global.imagePullPolicy }}
{{- end }}
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          command:
            - sh
            - -c
            - |-
              # START https://github.com/solo-io/istio-sidecarless/blob/master/config.sh#L17-L53
              OUTBOUND_MASK="0x100"
              OUTBOUND_MARK="0x100/$OUTBOUND_MASK"

              SKIP_MASK="0x200"
              SKIP_MARK="0x200/$SKIP_MASK"

              # note!! this includes the skip mark bit, so match on skip mark will match this as well.
              CONNSKIP_MASK="0x220"
              CONNSKIP_MARK="0x220/$CONNSKIP_MASK"

              # note!! this includes the skip mark bit, so match on skip mark will match this as well.
              PROXY_MASK="0x210"
              PROXY_MARK="0x210/$PROXY_MASK"

              PROXY_RET_MASK="0x040"
              PROXY_RET_MARK="0x040/$PROXY_RET_MASK"

              # a route table number number we can use to send traffic to envoy (should be unused).
              INBOUND_ROUTE_TABLE=100
              OUTBOUND_ROUTE_TABLE=101
              # needed for original src.
              PROXY_ROUTE_TABLE=102
              # END https://github.com/solo-io/istio-sidecarless/blob/master/config.sh#L17-L53

              # Clean up existing rules, if any
              set +e # Only for delete, we don't care if this fails
              ip rule del priority 100
              ip rule del priority 101
              ip rule del priority 102
              ip rule del priority 103
              set -e

              # START https://github.com/solo-io/istio-sidecarless/blob/master/redirect-worker.sh#L62-L77
              # Leaving off rules 104-107 as we don't need to worry about skipping between tables.
              # Renumbered 107 to 103 as we won't be needing the others specified in the script.
              #
              # everything with skip mark goes directly to the main table.
              ip rule add priority 100 fwmark $SKIP_MARK goto 32766
              # everything with outbound mark, goes to the tunnel out device using the outbound route table
              ip rule add priority 101 fwmark $OUTBOUND_MARK lookup $OUTBOUND_ROUTE_TABLE
              # things with proxy return mark go directly to the proxy veth using the proxy route table (i.e. useful for original src)
              ip rule add priority 102 fwmark $PROXY_RET_MARK lookup $PROXY_ROUTE_TABLE

              # send all traffic to the inbound table. this table has routes only to pods in the mesh.
              # this table doesn't have a catch-all route. if a route is missing, the search will continue.
              # this allows us to "override" routing just for member pods.

              ip rule add priority 103 table $INBOUND_ROUTE_TABLE
              # END https://github.com/solo-io/istio-sidecarless/blob/master/redirect-worker.sh#L62-L77
      containers:
        # This container installs the Istio CNI binaries
        # and CNI network config file on each node.
        - name: install-cni
{{- if contains "/" .Values.cni.image }}
          image: "{{ .Values.cni.image }}"
{{- else }}
          image: "{{ .Values.cni.hub | default .Values.global.hub }}/{{ .Values.cni.image | default "install-cni" }}:{{ .Values.cni.tag | default .Values.global.tag }}"
{{- end }}
{{- if or .Values.cni.pullPolicy .Values.global.imagePullPolicy }}
          imagePullPolicy: {{ .Values.cni.pullPolicy | default .Values.global.imagePullPolicy }}
{{- end }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8000
          securityContext:
            runAsGroup: 0
            runAsUser: 0
            runAsNonRoot: false
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          command: ["install-cni"]
          env:
{{- if .Values.cni.cniConfFileName }}
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "{{ .Values.cni.cniConfFileName }}"
{{- end }}
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: istio-cni-config
                  key: cni_network_config
            - name: CNI_NET_DIR
              value: {{ default "/etc/cni/net.d" .Values.cni.cniConfDir }}
            # Deploy as a standalone CNI plugin or as chained?
            - name: CHAINED_CNI_PLUGIN
              value: "{{ .Values.cni.chained }}"
            - name: REPAIR_ENABLED
              value: "{{ .Values.cni.repair.enabled }}"
            - name: REPAIR_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: REPAIR_LABEL_PODS
              value: "{{.Values.cni.repair.labelPods}}"
            # Set to true to enable pod deletion
            - name: REPAIR_DELETE_PODS
              value: "{{.Values.cni.repair.deletePods}}"
            - name: REPAIR_RUN_AS_DAEMON
              value: "true"
            - name: REPAIR_SIDECAR_ANNOTATION
              value: "sidecar.istio.io/status"
            - name: REPAIR_INIT_CONTAINER_NAME
              value: "{{ .Values.cni.repair.initContainerName }}"
            - name: REPAIR_BROKEN_POD_LABEL_KEY
              value: "{{.Values.cni.repair.brokenPodLabelKey}}"
            - name: REPAIR_BROKEN_POD_LABEL_VALUE
              value: "{{.Values.cni.repair.brokenPodLabelValue}}"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /var/run/istio-cni
              name: cni-log-dir
            - mountPath: /etc/ambient-config
              name: cni-ambientconfig
          resources:
{{- if .Values.cni.resources }}
{{ toYaml .Values.cni.resources | trim | indent 12 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | trim | indent 12 }}
{{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                - sh
                - -c
                - |-
                  iptables -t nat -F uproxy-PREROUTING
                  iptables -t nat -F uproxy-POSTROUTING
                  iptables -t mangle -F uproxy-PREROUTING
                  iptables -t mangle -F uproxy-FOWARD
                  iptables -t mangle -F uproxy-INPUT
                  iptables -t nat -D PREROUTING -j uproxy-PREROUTING
                  iptables -t nat -X uproxy-PREROUTING
                  iptables -t nat -D POSTROUTING -j uproxy-POSTROUTING
                  iptables -t nat -X uproxy-POSTROUTING
                  iptables -t mangle -D PREROUTING -j uproxy-PREROUTING
                  iptables -t mangle -X uproxy-PREROUTING
                  iptables -t mangle -D FORWARD -j uproxy-FORWARD
                  iptables -t mangle -X uproxy-FORWARD
                  iptables -t mangle -D INPUT -j uproxy-INPUT
                  iptables -t mangle -X uproxy-INPUT

                  ip route flush table 100
                  ip route flush table 101
                  ip route flush table 102

                  ip rule del priority 100
                  ip rule del priority 101
                  ip rule del priority 102
                  ip rule del priority 103

                  ip link del name istioin
                  ip link del name istioout

                  ipset destroy uproxy-pods-ips
{{- if .Values.cni.taint.enabled }}
        - name: taint-controller
{{- if contains "/" .Values.cni.image }}
          image: "{{ .Values.cni.image }}"
{{- else }}
          image: "{{ .Values.cni.hub | default .Values.global.hub }}/{{ .Values.cni.image | default "install-cni" }}:{{ .Values.cni.tag | default .Values.global.tag }}"
{{- end }}
{{- if or .Values.cni.pullPolicy .Values.global.imagePullPolicy }}
          imagePullPolicy: {{ .Values.cni.pullPolicy | default .Values.global.imagePullPolicy }}
{{- end }}
          command: ["/opt/local/bin/istio-cni-taint"]
          securityContext:
            runAsUser: 1337
            runAsGroup: 1337
            runAsNonRoot: true
          env:
          - name: "TAINT_RUN-AS-DAEMON"
            value: "true"
          - name: "TAINT_CONFIGMAP-NAME"
            value: "istio-cni-taint-configmap"
          - name: "TAINT_CONFIGMAP-NAMESPACE"
            value: {{ .Release.Namespace | quote }}
{{- end }}
      volumes:
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: {{ default "/opt/cni/bin" .Values.cni.cniBinDir }}
        - name: cni-ambientconfig
          hostPath:
            path: /etc/ambient-config
        - name: cni-net-dir
          hostPath:
            path: {{ default "/etc/cni/net.d" .Values.cni.cniConfDir }}
        # Used for UDS log
        - name: cni-log-dir
          hostPath:
            path: /var/run/istio-cni
