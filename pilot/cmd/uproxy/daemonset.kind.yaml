apiVersion: v1
kind: ServiceAccount
metadata:
  name: uproxy
  namespace: istio-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: uproxy
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: uproxy
  template:
    metadata:
      labels:
        app: uproxy
        asm-type: proxy
    spec:
      serviceAccountName: uproxy
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
      - name: istio-init
        image: localhost:5000/uproxy:ambient-oss
        securityContext:
          privileged: true
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        command:
        - sh
        - -c
        - |
          # DPv2 won't redirect the node-local traffic for us, so we send it to a different tunnel port as a way to differentiate it.
          # Here we redirect the special "node-local tunnel (15088)" to the regular HBONE port (15008).
          # TODO: instead, we should elide the tunnel completely for node-local.
          iptables -t nat -I OUTPUT 1 -p tcp -o veth+ --dport 15088 -j REDIRECT --to-port 15008
        env:
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP

      containers:
      - name: istio-proxy
        image: localhost:5000/uproxy:ambient-oss
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            port: 15021
            path: /healthz/ready
        args:
        - proxy
        - sidecar
        env:
        - name: PROXY_CONFIG
          value: '{"tracing": {"disabled": {}}}'
        - name: ISTIO_BOOTSTRAP
          value: ./var/lib/istio/envoy/uproxy_bootstrap_tmpl.json
        - name: ISTIO_META_GENERATOR
          value: "uproxy-envoy"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ISTIO_META_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        volumeMounts:
        - mountPath: /var/run/secrets/istio
          name: istiod-ca-cert
        - mountPath: /var/run/secrets/tokens
          name: istio-token
        - mountPath: /var/lib/kubelet/pki # Must match due to symlinks...
          name: kubelet-creds
      volumes:
      - name: kubelet-creds
        hostPath:
          path: /var/lib/kubelet/pki
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              path: istio-token
              expirationSeconds: 43200
              audience: istio-ca
      - name: istiod-ca-cert
        configMap:
          name: istio-ca-root-cert
